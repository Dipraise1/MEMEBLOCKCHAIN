version: '3.8'

services:
  # MemeChain blockchain node
  memechain:
    build: .
    container_name: memechain-node
    ports:
      - "8080:8080"  # API
      - "26657:26657"  # RPC
      - "26656:26656"  # P2P
    volumes:
      - memechain_data:/app/data
      - ./config.toml:/app/config.toml:ro
      - ./genesis.json:/app/genesis.json:ro
    environment:
      - RUST_LOG=info
      - MEMECHAIN_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - memechain_network

  # Block explorer
  explorer:
    build: ./tools/explorer
    container_name: memechain-explorer
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://memechain:8080
      - REACT_APP_RPC_URL=http://memechain:26657
    depends_on:
      memechain:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - memechain_network

  # Testnet faucet
  faucet:
    build: ./tools/faucet
    container_name: memechain-faucet
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - FAUCET_PRIVATE_KEY=${FAUCET_PRIVATE_KEY}
      - API_URL=http://memechain:8080
      - RPC_URL=http://memechain:26657
    depends_on:
      memechain:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - memechain_network

  # Transaction indexer
  indexer:
    build: ./tools/indexer
    container_name: memechain-indexer
    environment:
      - NODE_ENV=production
      - API_URL=http://memechain:8080
      - RPC_URL=http://memechain:26657
      - DATABASE_URL=postgresql://indexer:password@postgres:5432/memechain_indexer
    depends_on:
      - memechain
      - postgres
    restart: unless-stopped
    networks:
      - memechain_network

  # PostgreSQL database for indexer
  postgres:
    image: postgres:14-alpine
    container_name: memechain-postgres
    environment:
      - POSTGRES_DB=memechain_indexer
      - POSTGRES_USER=indexer
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - memechain_network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: memechain-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - memechain_network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: memechain-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - memechain
      - explorer
      - faucet
    restart: unless-stopped
    networks:
      - memechain_network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: memechain-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - memechain_network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: memechain-grafana
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - memechain_network

volumes:
  memechain_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  memechain_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 